
name: CI/CD Pipeline

on: 
  pull_request:
    branches:
      - Master
      
  workflow_dispatch:
  push:
    branches:
      - Dev
      - Master

jobs:
  CI:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          dotnet tool install --global dotnet-coverage

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_SONAR_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"FelipeFabricio_wonderfood-pedidos" /o:"felipefabricio" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  CD:
    needs: CI
    if: github.ref == 'refs/heads/Master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Efetua Login no Azure
        uses: Azure/login@v1.6.1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Instalação do kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.29.1'
        id: install

      - name: Login no DockerHub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build, Tag e Push da Imagem para o DockerHub
        run: |
          docker build -t felipefabricio/wdf.pedidos.worker:latest -f Worker.Dockerfile .
          docker push felipefabricio/wdf.pedidos.worker:latest     
          docker build -t felipefabricio/wdf.pedidos.webapi:latest -f WebApi.Dockerfile .
          docker push felipefabricio/wdf.pedidos.webapi:latest     

      - name: Configuração do Context Kubernetes no Azure
        run: az aks get-credentials --resource-group wonderfood-rg --name wonderfood-cluster

      - name: Deploy do Manifesto no AKS
        run: |
          kubectl apply -f pedidos-worker-deployment.yml --force --record
          kubectl apply -f pedidos-webapi-deployment.yml --force --record